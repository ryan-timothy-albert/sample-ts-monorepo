/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type ShowPetByIdRequest = {
    /**
     * The id of the pet to retrieve
     */
    petId: string;
};

export type ShowPetByIdResponse = components.ErrorT | components.Pet;

/** @internal */
export namespace ShowPetByIdRequest$ {
    export const inboundSchema: z.ZodType<ShowPetByIdRequest, z.ZodTypeDef, unknown> = z.object({
        petId: z.string(),
    });

    export type Outbound = {
        petId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ShowPetByIdRequest> = z.object({
        petId: z.string(),
    });
}

/** @internal */
export namespace ShowPetByIdResponse$ {
    export const inboundSchema: z.ZodType<ShowPetByIdResponse, z.ZodTypeDef, unknown> = z.union([
        components.ErrorT$.inboundSchema,
        components.Pet$.inboundSchema,
    ]);

    export type Outbound = components.ErrorT$.Outbound | components.Pet$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ShowPetByIdResponse> = z.union([
        components.ErrorT$.outboundSchema,
        components.Pet$.outboundSchema,
    ]);
}
